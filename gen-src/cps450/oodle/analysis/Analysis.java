/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.analysis;

import cps450.oodle.node.*;

public interface Analysis extends Switch
{
    Object getIn(Node node);
    void setIn(Node node, Object o);
    Object getOut(Node node);
    void setOut(Node node, Object o);

    void caseTIf(TIf node);
    void caseTWhile(TWhile node);
    void caseTBoolean(TBoolean node);
    void caseTBegin(TBegin node);
    void caseTKlass(TKlass node);
    void caseTElse(TElse node);
    void caseTEnd(TEnd node);
    void caseTFalse(TFalse node);
    void caseTFrom(TFrom node);
    void caseTInherits(TInherits node);
    void caseTInt(TInt node);
    void caseTIs(TIs node);
    void caseTLoop(TLoop node);
    void caseTMe(TMe node);
    void caseTNew(TNew node);
    void caseTNot(TNot node);
    void caseTNull(TNull node);
    void caseTString(TString node);
    void caseTThen(TThen node);
    void caseTTrue(TTrue node);
    void caseTAnd(TAnd node);
    void caseTOr(TOr node);
    void caseTBang(TBang node);
    void caseTComma(TComma node);
    void caseTSemicolon(TSemicolon node);
    void caseTColon(TColon node);
    void caseTPeriod(TPeriod node);
    void caseTGteOp(TGteOp node);
    void caseTGtOp(TGtOp node);
    void caseTEqOp(TEqOp node);
    void caseTPlusOp(TPlusOp node);
    void caseTMinusOp(TMinusOp node);
    void caseTMultOp(TMultOp node);
    void caseTDivOp(TDivOp node);
    void caseTConcatOp(TConcatOp node);
    void caseTLPar(TLPar node);
    void caseTRPar(TRPar node);
    void caseTAssignmentOp(TAssignmentOp node);
    void caseTLBracket(TLBracket node);
    void caseTRBracket(TRBracket node);
    void caseTId(TId node);
    void caseTIntlit(TIntlit node);
    void caseTStrlit(TStrlit node);
    void caseTIllegalString(TIllegalString node);
    void caseTUnterminatedString(TUnterminatedString node);
    void caseTContinuation(TContinuation node);
    void caseTEol(TEol node);
    void caseTBlank(TBlank node);
    void caseTComment(TComment node);
    void caseTIllegalChar(TIllegalChar node);
    void caseEOF(EOF node);
}
