/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.node;

import cps450.oodle.analysis.*;

@SuppressWarnings("nls")
public final class AExpr7UnaryExpression extends PUnaryExpression
{
    private PGroupObjectCallExpression _groupObjectCallExpression_;

    public AExpr7UnaryExpression()
    {
        // Constructor
    }

    public AExpr7UnaryExpression(
        @SuppressWarnings("hiding") PGroupObjectCallExpression _groupObjectCallExpression_)
    {
        // Constructor
        setGroupObjectCallExpression(_groupObjectCallExpression_);

    }

    @Override
    public Object clone()
    {
        return new AExpr7UnaryExpression(
            cloneNode(this._groupObjectCallExpression_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAExpr7UnaryExpression(this);
    }

    public PGroupObjectCallExpression getGroupObjectCallExpression()
    {
        return this._groupObjectCallExpression_;
    }

    public void setGroupObjectCallExpression(PGroupObjectCallExpression node)
    {
        if(this._groupObjectCallExpression_ != null)
        {
            this._groupObjectCallExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._groupObjectCallExpression_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._groupObjectCallExpression_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._groupObjectCallExpression_ == child)
        {
            this._groupObjectCallExpression_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._groupObjectCallExpression_ == oldChild)
        {
            setGroupObjectCallExpression((PGroupObjectCallExpression) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
