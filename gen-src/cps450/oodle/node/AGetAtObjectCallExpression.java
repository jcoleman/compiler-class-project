/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.node;

import cps450.oodle.analysis.*;

@SuppressWarnings("nls")
public final class AGetAtObjectCallExpression extends PObjectCallExpression
{
    private PGetAtReference _getAtReference_;

    public AGetAtObjectCallExpression()
    {
        // Constructor
    }

    public AGetAtObjectCallExpression(
        @SuppressWarnings("hiding") PGetAtReference _getAtReference_)
    {
        // Constructor
        setGetAtReference(_getAtReference_);

    }

    @Override
    public Object clone()
    {
        return new AGetAtObjectCallExpression(
            cloneNode(this._getAtReference_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGetAtObjectCallExpression(this);
    }

    public PGetAtReference getGetAtReference()
    {
        return this._getAtReference_;
    }

    public void setGetAtReference(PGetAtReference node)
    {
        if(this._getAtReference_ != null)
        {
            this._getAtReference_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._getAtReference_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._getAtReference_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._getAtReference_ == child)
        {
            this._getAtReference_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._getAtReference_ == oldChild)
        {
            setGetAtReference((PGetAtReference) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
