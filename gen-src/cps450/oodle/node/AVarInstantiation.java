/* This file was generated by SableCC (http://www.sablecc.org/). */

package cps450.oodle.node;

import cps450.oodle.analysis.*;

@SuppressWarnings("nls")
public final class AVarInstantiation extends PVarInstantiation
{
    private TColon _colon_;
    private TEqOp _eqOp_;
    private PExpression _expression_;

    public AVarInstantiation()
    {
        // Constructor
    }

    public AVarInstantiation(
        @SuppressWarnings("hiding") TColon _colon_,
        @SuppressWarnings("hiding") TEqOp _eqOp_,
        @SuppressWarnings("hiding") PExpression _expression_)
    {
        // Constructor
        setColon(_colon_);

        setEqOp(_eqOp_);

        setExpression(_expression_);

    }

    @Override
    public Object clone()
    {
        return new AVarInstantiation(
            cloneNode(this._colon_),
            cloneNode(this._eqOp_),
            cloneNode(this._expression_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAVarInstantiation(this);
    }

    public TColon getColon()
    {
        return this._colon_;
    }

    public void setColon(TColon node)
    {
        if(this._colon_ != null)
        {
            this._colon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._colon_ = node;
    }

    public TEqOp getEqOp()
    {
        return this._eqOp_;
    }

    public void setEqOp(TEqOp node)
    {
        if(this._eqOp_ != null)
        {
            this._eqOp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._eqOp_ = node;
    }

    public PExpression getExpression()
    {
        return this._expression_;
    }

    public void setExpression(PExpression node)
    {
        if(this._expression_ != null)
        {
            this._expression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._expression_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._colon_)
            + toString(this._eqOp_)
            + toString(this._expression_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._colon_ == child)
        {
            this._colon_ = null;
            return;
        }

        if(this._eqOp_ == child)
        {
            this._eqOp_ = null;
            return;
        }

        if(this._expression_ == child)
        {
            this._expression_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._colon_ == oldChild)
        {
            setColon((TColon) newChild);
            return;
        }

        if(this._eqOp_ == oldChild)
        {
            setEqOp((TEqOp) newChild);
            return;
        }

        if(this._expression_ == oldChild)
        {
            setExpression((PExpression) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
